{
    "openapi": "3.0.0",
    "info": {
        "title": "API Documentation",
        "description": "Documentation for the Bookstore API",
        "contact": {
            "email": "admin@example.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "API Server"
        }
    ],
    "paths": {
        "/car": {
            "get": {
                "tags": [
                    "Car"
                ],
                "summary": "Get all Cars",
                "description": "Retrieve a list of all cars",
                "operationId": "getAllCars",
                "responses": {
                    "200": {
                        "description": "List of cars retrieved successfully"
                    }
                }
            },
            "post": {
                "tags": [
                    "Car"
                ],
                "summary": "Add a new Car",
                "description": "Store a new car to database",
                "operationId": "storeCar",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "category_id",
                                    "name",
                                    "image",
                                    "brand_name",
                                    "price_per_day",
                                    "stock"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Toyota Fortuner"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "fortuner.jpg"
                                    },
                                    "brand_name": {
                                        "type": "string",
                                        "example": "Toyota"
                                    },
                                    "price_per_day": {
                                        "type": "integer",
                                        "example": 500000
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Mobil berhasil ditambahkan"
                    },
                    "500": {
                        "description": "Terjadi kesalahan saat menambahkan mobil"
                    }
                }
            }
        },
        "/car/{id}": {
            "put": {
                "tags": [
                    "Car"
                ],
                "summary": "Update a Car",
                "description": "Update car information",
                "operationId": "updateCar",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of car to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "category_id",
                                    "name",
                                    "image",
                                    "brand_name",
                                    "price_per_day",
                                    "stock"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Toyota Fortuner"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "fortuner_updated.jpg"
                                    },
                                    "brand_name": {
                                        "type": "string",
                                        "example": "Toyota Updated"
                                    },
                                    "price_per_day": {
                                        "type": "integer",
                                        "example": 550000
                                    },
                                    "stock": {
                                        "type": "integer",
                                        "example": 4
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Data mobil berhasil diperbarui"
                    },
                    "404": {
                        "description": "Mobil tidak ditemukan"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Car"
                ],
                "summary": "Delete a Car",
                "description": "Delete a car by its ID",
                "operationId": "deleteCar",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of car to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mobil berhasil dihapus"
                    },
                    "404": {
                        "description": "Mobil tidak ditemukan"
                    }
                }
            }
        },
        "/category": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Get all Categories",
                "description": "Retrieve a list of all categories",
                "operationId": "getAllCategories",
                "responses": {
                    "200": {
                        "description": "List of categories retrieved successfully"
                    }
                }
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Add a new Category",
                "description": "Store a new category to database",
                "operationId": "storeCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "SUV"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Kategori berhasil ditambahkan"
                    },
                    "500": {
                        "description": "Terjadi kesalahan saat menambahkan kategori"
                    }
                }
            }
        },
        "/category/{id}": {
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Update a Category",
                "description": "Update category information",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of category to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "SUV Updated"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Data kategori berhasil diperbarui"
                    },
                    "404": {
                        "description": "Kategori tidak ditemukan"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete a Category",
                "description": "Delete a category by its ID",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Kategori berhasil dihapus"
                    },
                    "404": {
                        "description": "Kategori tidak ditemukan"
                    }
                }
            }
        },
        "/reservation": {
            "post": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Create a new reservation",
                "description": "Store a new reservation for a user and car",
                "operationId": "reserveCar",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "car_id",
                                    "start_date",
                                    "end_date",
                                    "proof_of_payment",
                                    "payment_status",
                                    "status"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "car_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-05-01"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-05-05"
                                    },
                                    "proof_of_payment": {
                                        "type": "string",
                                        "example": "payment.jpg"
                                    },
                                    "payment_status": {
                                        "type": "string",
                                        "example": "paid"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "confirmed"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reservation successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationResource"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error while creating reservation"
                    }
                }
            }
        },
        "/reservation/{id}": {
            "get": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Get a reservation by ID",
                "description": "Retrieve details of a reservation including user and car information",
                "operationId": "getReservation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Reservation not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Update reservation status",
                "description": "Update the payment status and status of the reservation",
                "operationId": "updateReservationStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "payment_status",
                                    "status"
                                ],
                                "properties": {
                                    "payment_status": {
                                        "type": "string",
                                        "example": "paid"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "confirmed"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reservation status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReservationResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Reservation not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Reservation"
                ],
                "summary": "Delete a reservation",
                "description": "Delete a reservation by its ID",
                "operationId": "deleteReservation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation successfully deleted"
                    },
                    "404": {
                        "description": "Reservation not found"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register a new user",
                "description": "Create a new user with provided name, email, and password",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error while creating user"
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user data by ID",
                "description": "Retrieve details of a specific user by their ID",
                "operationId": "getUserData",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Update user data",
                "description": "Update name, email, and optionally password of a user",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe Updated"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe.updated@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User data updated successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete a user",
                "description": "Delete a user by their ID",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully deleted"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ReservationResource": {
                "title": "Reservation Resource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "John Doe"
                            },
                            "email": {
                                "type": "string",
                                "example": "john@example.com"
                            }
                        },
                        "type": "object"
                    },
                    "car": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 10
                            },
                            "name": {
                                "type": "string",
                                "example": "Avanza"
                            },
                            "brand_name": {
                                "type": "string",
                                "example": "Toyota"
                            },
                            "category_id": {
                                "type": "integer",
                                "example": 3
                            },
                            "image": {
                                "type": "string",
                                "example": "avanza.jpg"
                            },
                            "price_per_day": {
                                "type": "integer",
                                "example": 250000
                            },
                            "stock": {
                                "type": "integer",
                                "example": 5
                            }
                        },
                        "type": "object"
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-05-01"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-05-05"
                    },
                    "proof_of_payment": {
                        "type": "string",
                        "example": "bukti.jpg"
                    },
                    "payment_status": {
                        "type": "string",
                        "example": "paid"
                    },
                    "status": {
                        "type": "string",
                        "example": "confirmed"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-01T10:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-05-01T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "UserResource": {
                "title": "User Resource",
                "description": "User data response schema",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "johndoe@example.com"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-02T00:00:00Z"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Car",
            "description": "Car"
        },
        {
            "name": "Category",
            "description": "Category"
        },
        {
            "name": "Reservation",
            "description": "Reservation"
        },
        {
            "name": "User",
            "description": "User"
        }
    ]
}